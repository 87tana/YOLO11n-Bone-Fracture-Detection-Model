# -*- coding: utf-8 -*-
"""bone_fracture_inf.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11jX5mY9jxQUDwB4Z9mSD1wfentenGeG5
"""

# Commented out IPython magic to ensure Python compatibility.
from google.colab import drive
drive.mount('/content/my_drive', force_remount=True)

# Navigate to the project directory
# %cd '/content/my_drive/MyDrive/Project_Experiments/Bone_Fraction_Detection/'

# Define dataset path
#dataset_path = '/content/my_drive/MyDrive/Project_Experiments/Bone_Fraction_Detection/Fraction_Detection_Dataset'

!pip install ultralytics --quiet

# General libraries
import os
from PIL import Image

from ultralytics import YOLO

# Visualization
import matplotlib.pyplot as plt

# nference on a specific image from your training dataset using a trained YOLO model

image_list = os.listdir('/content/my_drive/MyDrive/Project_Experiments/Bone_Fraction_Detection/Fraction_Detection_Dataset/train/images')

# Run inference on a test image
test_image_path = os.path.join("/content/my_drive/MyDrive/Project_Experiments/Bone_Fraction_Detection/Fraction_Detection_Dataset/train/images/", image_list[300])  # Example image index

# Load the YOLOv11n model (ensure the weights file exists at the given path)
model_inf_path = '/content/my_drive/MyDrive/Project_Experiments/Bone_Fraction_Detection/Model_Checkpoints/02/weights/best.pt'
model_inf = YOLO(model_inf_path)  # Load YOLOv11n model with custom weights
results = model_inf(test_image_path)  # Get predictions for the test image

# Visualize the results
for r in results:
    # Plot the prediction results
    im_bgr = r.plot()  # Convert to BGR
    im_rgb = Image.fromarray(im_bgr[..., ::-1])  # Convert to RGB
    r.show()  # Show the result